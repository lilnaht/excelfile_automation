:root {
  font-family: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  line-height: 1.5;
  font-weight: 400;

  /* Color System */
  --bg-primary: #0a0a0a;
  --bg-secondary: #1a1a1a;
  --bg-glass: rgba(26, 26, 26, 0.7);
  --border-primary: rgba(255, 255, 255, 0.1);
  --border-active: rgba(59, 130, 246, 0.5);
  --text-primary: rgba(255, 255, 255, 0.9);
  --text-secondary: rgba(255, 255, 255, 0.6);
  --text-placeholder: rgba(255, 255, 255, 0.4);
  --accent-primary: #3b82f6;
  --accent-hover: #2563eb;
  --success: #10b981;
  --error: #ef4444;

  /* Spacing */
  --spacing-xs: 0.5rem;
  --spacing-sm: 0.75rem;
  --spacing-md: 1rem;
  --spacing-lg: 1.5rem;
  --spacing-xl: 2rem;
  --spacing-2xl: 3rem;


  /* Animations */
  --transition-fast: 0.15s ease;
  --transition-normal: 0.3s ease;
  --transition-slow: 0.5s ease;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Estilos da Tela de Carregamento */
.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  transition: opacity 0.5s ease;
  opacity: 1;
}

.loading-overlay.hidden {
  opacity: 0;
  pointer-events: none;
}

#loadingText {
  color: #fff;
  margin-top: 20px;
  font-family: sans-serif;
  font-size: 1.2em;
}

.spinner {
  border: 8px solid rgba(255, 255, 255, 0.2);
  border-left-color: #ffffff;
  border-radius: 50%;
  width: 60px;
  height: 60px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: var(--bg-primary);
  color: var(--text-primary);
  min-height: 100vh;
  overflow-x: hidden;
}

.container {
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-lg);
  position: relative;
}

.background-blur {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background:
    radial-gradient(circle at 20% 80%, rgba(59, 130, 246, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(16, 185, 129, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(139, 92, 246, 0.05) 0%, transparent 50%);
  z-index: -1;
}

.glass-card {
  background: var(--bg-glass);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 1px solid var(--border-primary);
  border-radius: 24px;
  padding: var(--spacing-2xl);
  width: 100%;
  max-width: 480px;
  box-shadow:
    0 8px 32px rgba(0, 0, 0, 0.3),
    0 2px 8px rgba(0, 0, 0, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  animation: slideIn 0.6s ease-out;
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: var(--spacing-2xl);
}

.title {
  font-size: 1.75rem;
  font-weight: 600;
  background: linear-gradient(135deg, var(--text-primary), var(--text-secondary));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  line-height: 1.2;
  flex: 1;
  text-align: center;
}

.db-status {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  /* cursor: help; */
  transition: all var(--transition-normal);
}

.status-icon {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: var(--text-secondary);
  transition: all var(--transition-normal);
  animation: pulse 2s infinite;
}

.db-status.connected .status-icon {
  background-color: var(--success);
  animation: none;
}

.db-status.disconnected .status-icon {
  background-color: var(--error);
  animation: none;
}

.input-container {
  position: relative;
  margin-bottom: var(--spacing-xl);
}

.cost-input {
  width: 100%;
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid var(--border-primary);
  border-radius: 16px;
  padding: var(--spacing-lg);
  font-size: 1rem;
  color: var(--text-primary);
  transition: all var(--transition-normal);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
}

.cost-input::placeholder {
  color: var(--text-placeholder);
}

.cost-input:focus {
  outline: none;
  border-color: var(--border-active);
  background: rgba(255, 255, 255, 0.08);
  box-shadow:
    0 0 0 3px rgba(59, 130, 246, 0.1),
    0 8px 24px rgba(0, 0, 0, 0.2);
  transform: translateY(-2px);
}

.cost-input.has-content {
  border-color: var(--border-active);
  background: rgba(255, 255, 255, 0.08);
}

.input-border {
  position: absolute;
  bottom: 0;
  left: 50%;
  width: 0;
  height: 2px;
  background: linear-gradient(90deg, var(--accent-primary), var(--success));
  border-radius: 1px;
  transition: all var(--transition-normal);
  transform: translateX(-50%);
}

.cost-input.focused+.input-border,
.cost-input.has-content+.input-border {
  width: 100%;
}

.process-button {
  width: 100%;
  background: var(--bg-secondary);
  border: 1px solid var(--border-primary);
  border-radius: 16px;
  padding: var(--spacing-lg);
  font-size: 1rem;
  font-weight: 500;
  color: var(--text-secondary);
  cursor: not-allowed;
  transition: all var(--transition-normal);
  position: relative;
  overflow: hidden;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
}

.process-button.active {
  background: var(--accent-primary);
  border-color: var(--accent-primary);
  color: white;
  cursor: pointer;
  box-shadow:
    0 4px 16px rgba(59, 130, 246, 0.3),
    0 2px 8px rgba(0, 0, 0, 0.2);
}

.process-button.active:hover {
  background: var(--accent-hover);
  border-color: var(--accent-hover);
  transform: translateY(-2px);
  box-shadow:
    0 6px 20px rgba(59, 130, 246, 0.4),
    0 4px 12px rgba(0, 0, 0, 0.3);
}

.process-button.processing {
  background: var(--accent-hover);
  cursor: not-allowed;
  animation: pulse 2s infinite;
}

.button-text {
  position: relative;
  z-index: 2;
}

.button-ripple {
  position: absolute;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  transform: scale(0);
  pointer-events: none;
}

.button-ripple.animate {
  animation: ripple 0.6s linear;
}


.feedback {
  text-align: center;
  padding: var(--spacing-md);
  border-radius: 12px;
  font-size: 0.9rem;
  font-weight: 500;
  margin-top: var(--spacing-lg);
  transition: all var(--transition-normal);
  transform: translateY(10px);
  opacity: 0;
}

.feedback.visible {
  transform: translateY(0);
  opacity: 1;
}

.feedback.success {
  background: rgba(16, 185, 129, 0.1);
  border: 1px solid rgba(16, 185, 129, 0.3);
  color: var(--success);
}

.feedback.error {
  background: rgba(239, 68, 68, 0.1);
  border: 1px solid rgba(239, 68, 68, 0.3);
  color: var(--error);
}

.feedback.info {
  background: rgba(59, 130, 246, 0.1);
  border: 1px solid rgba(59, 130, 246, 0.3);
  color: var(--accent-primary);
}

.feedback.hidden {
  display: none;
}

/* Animations */
@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(30px) scale(0.95);
  }

  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes pulse {

  0%,
  100% {
    opacity: 1;
  }

  50% {
    opacity: 0.8;
  }
}

@keyframes ripple {
  to {
    transform: scale(4);
    opacity: 0;
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  .container {
    padding: var(--spacing-md);
  }

  .glass-card {
    padding: var(--spacing-xl);
    border-radius: 20px;
  }

  .title {
    font-size: 1.5rem;
    margin-bottom: var(--spacing-xl);
  }

  .cost-input,
  .process-button {
    padding: var(--spacing-md);
    border-radius: 12px;
  }
}

@media (max-width: 480px) {
  .glass-card {
    padding: var(--spacing-lg);
    border-radius: 16px;
  }

  .title {
    font-size: 1.25rem;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  :root {
    --border-primary: rgba(255, 255, 255, 0.3);
    --text-primary: #ffffff;
    --text-secondary: #cccccc;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {

  /* APLICA A REGRA A TUDO, EXCETO A ELEMENTOS COM A CLASSE .spinner */
  *:not(.spinner),
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}